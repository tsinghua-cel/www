import{_ as a,c as e,o as t,ae as i}from"./chunks/framework.CflXwq_F.js";const k=JSON.parse('{"title":"Basic Usage","description":"","frontmatter":{},"headers":[],"relativePath":"usage.md","filePath":"usage.md"}'),n={name:"usage.md"};function p(h,s,l,r,c,d){return t(),e("div",null,s[0]||(s[0]=[i(`<h1 id="basic-usage" tabindex="-1">Basic Usage <a class="header-anchor" href="#basic-usage" aria-label="Permalink to &quot;Basic Usage&quot;">​</a></h1><p>We have integrated <code>Bunnyfinder</code> into the <code>ethereum-package</code>. You can run tests on an Ethereum PoS network with multiple client versions. Below is an example of running tests and retrieving the results.</p><h2 id="start-the-test" tabindex="-1">Start the Test <a class="header-anchor" href="#start-the-test" aria-label="Permalink to &quot;Start the Test&quot;">​</a></h2><p>We provide some scripts and test parameter files in the <code>guide</code> directory.</p><p>First, you need to switch to the <code>guide</code> directory.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> guide</span></span></code></pre></div><p>Then, use the following command to start the test.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./run.sh</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> testname</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./testset/network_params.yaml</span></span></code></pre></div><p>Here, we are running three sets of beacon nodes, each using a different client. The execution layer includes <code>besu</code>, <code>geth</code>, and <code>nethermind</code>, while the consensus layer includes <code>prysm</code>, <code>lighthouse</code>, and <code>teku</code>.</p><p>When the following log appears, it indicates that the entire test has run successfully.</p><div class="language-text vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>========================================== User Services ==========================================</span></span>
<span class="line"><span>UUID           Name                                             Ports                                         Status</span></span>
<span class="line"><span>90ee4bff7ac7   bunnyfinder                                      http: 19000/tcp -&gt; http://127.0.0.1:32828     RUNNING</span></span>
<span class="line"><span>0a95359926df   cl-1-prysm-besu                                  http: 3500/tcp -&gt; http://127.0.0.1:32819      RUNNING</span></span>
<span class="line"><span>                                                                metrics: 8080/tcp -&gt; http://127.0.0.1:32816   </span></span>
<span class="line"><span>                                                                profiling: 6060/tcp -&gt; 127.0.0.1:32817        </span></span>
<span class="line"><span>                                                                rpc: 4000/tcp -&gt; 127.0.0.1:32818              </span></span>
<span class="line"><span>                                                                tcp-discovery: 13000/tcp -&gt; 127.0.0.1:32815   </span></span>
<span class="line"><span>                                                                udp-discovery: 12000/udp -&gt; 127.0.0.1:32777   </span></span>
<span class="line"><span>895d9bf907f9   cl-2-lighthouse-geth                             http: 4000/tcp -&gt; http://127.0.0.1:32822      RUNNING</span></span>
<span class="line"><span>                                                                metrics: 5054/tcp -&gt; http://127.0.0.1:32821   </span></span>
<span class="line"><span>                                                                tcp-discovery: 9000/tcp -&gt; 127.0.0.1:32820    </span></span>
<span class="line"><span>                                                                udp-discovery: 9000/udp -&gt; 127.0.0.1:32778    </span></span>
<span class="line"><span>5c8e2e2c7c7d   cl-3-teku-nethermind                             http: 4000/tcp -&gt; http://127.0.0.1:32825      RUNNING</span></span>
<span class="line"><span>                                                                metrics: 8008/tcp -&gt; http://127.0.0.1:32824   </span></span>
<span class="line"><span>                                                                tcp-discovery: 9000/tcp -&gt; 127.0.0.1:32823    </span></span>
<span class="line"><span>                                                                udp-discovery: 9000/udp -&gt; 127.0.0.1:32779    </span></span>
<span class="line"><span>af977800bf29   el-1-besu-prysm                                  engine-rpc: 8551/tcp -&gt; 127.0.0.1:32802       RUNNING</span></span>
<span class="line"><span>                                                                metrics: 9001/tcp -&gt; http://127.0.0.1:32801   </span></span>
<span class="line"><span>                                                                rpc: 8545/tcp -&gt; 127.0.0.1:32804              </span></span>
<span class="line"><span>                                                                tcp-discovery: 30303/tcp -&gt; 127.0.0.1:32800   </span></span>
<span class="line"><span>                                                                udp-discovery: 30303/udp -&gt; 127.0.0.1:32774   </span></span>
<span class="line"><span>                                                                ws: 8546/tcp -&gt; 127.0.0.1:32803               </span></span>
<span class="line"><span>b861d349ff1a   el-2-geth-lighthouse                             engine-rpc: 8551/tcp -&gt; 127.0.0.1:32807       RUNNING</span></span>
<span class="line"><span>                                                                metrics: 9001/tcp -&gt; http://127.0.0.1:32806   </span></span>
<span class="line"><span>                                                                rpc: 8545/tcp -&gt; 127.0.0.1:32809              </span></span>
<span class="line"><span>                                                                tcp-discovery: 30303/tcp -&gt; 127.0.0.1:32805   </span></span>
<span class="line"><span>                                                                udp-discovery: 30303/udp -&gt; 127.0.0.1:32775   </span></span>
<span class="line"><span>                                                                ws: 8546/tcp -&gt; 127.0.0.1:32808               </span></span>
<span class="line"><span>8900b3150379   el-3-nethermind-teku                             engine-rpc: 8551/tcp -&gt; 127.0.0.1:32812       RUNNING</span></span>
<span class="line"><span>                                                                metrics: 9001/tcp -&gt; http://127.0.0.1:32811   </span></span>
<span class="line"><span>                                                                rpc: 8545/tcp -&gt; 127.0.0.1:32814              </span></span>
<span class="line"><span>                                                                tcp-discovery: 30303/tcp -&gt; 127.0.0.1:32810   </span></span>
<span class="line"><span>                                                                udp-discovery: 30303/udp -&gt; 127.0.0.1:32776   </span></span>
<span class="line"><span>                                                                ws: 8546/tcp -&gt; 127.0.0.1:32813               </span></span>
<span class="line"><span>5578c58fd8d8   validator-key-generation-cl-validator-keystore   &lt;none&gt;                                        RUNNING</span></span>
<span class="line"><span>ff8b93b77564   vc-1-besu-prysm                                  metrics: 8080/tcp -&gt; http://127.0.0.1:32826   RUNNING</span></span>
<span class="line"><span>305d686276e2   vc-2-geth-lighthouse                             metrics: 8080/tcp -&gt; http://127.0.0.1:32827   RUNNING</span></span></code></pre></div><h2 id="retrieve-the-results" tabindex="-1">Retrieve the Results <a class="header-anchor" href="#retrieve-the-results" aria-label="Permalink to &quot;Retrieve the Results&quot;">​</a></h2><p>After running the test for at least 3 epochs (about 20 minutes), we can log in to the database to check the results.</p><p>Use SQL query to check whether any vulnerabilities have been detected and identify the corresponding strategies.</p><p>(1) Log in to the database, enter the password, and then switch to the eth database. When prompted for a password, enter “12345678”.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> exec</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -it</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ethmysql</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mysql</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -u</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> root</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Enter</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> password:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Welcome</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> the</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> MySQL</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> monitor.</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  Commands</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> end</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> with</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">or</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\g</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Your</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> MySQL</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> connection</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> id</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> is</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 9</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Server</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> version:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 9.1.0</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> MySQL</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Community</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Server</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> -</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> GPL</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mysql</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">use</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> eth</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Database</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> changed</span></span></code></pre></div><p>(2) Use the following SQL queries to check for specific vulnerabilities:</p><h5 id="sql1-this-query-checks-for-reorganization-events" tabindex="-1">SQL1: This query checks for reorganization events <a class="header-anchor" href="#sql1-this-query-checks-for-reorganization-events" aria-label="Permalink to &quot;SQL1: This query checks for reorganization events&quot;">​</a></h5><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> content, reorg_count </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> t_strategy </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">WHERE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> reorg_count </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><p>If the result is non-empty, it indicates that the current attack has triggered a reorganization, and the \\texttt{content} field should be recorded as an effective attack strategy.</p><h5 id="sql2-this-query-checks-for-increased-honest-validator-s-reward-loss" tabindex="-1">SQL2: This query checks for increased &quot;honest validator&#39;s reward loss&quot; <a class="header-anchor" href="#sql2-this-query-checks-for-increased-honest-validator-s-reward-loss" aria-label="Permalink to &quot;SQL2: This query checks for increased &quot;honest validator&#39;s reward loss&quot;&quot;">​</a></h5><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> content, honest_lose_rate_avg </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> t_strategy </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">WHERE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> honest_lose_rate_avg </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><p>If the result is non-empty, it indicates that the current attack has caused an increase in the honest reward loss rate. Again, the <code>content</code> field should be recorded as an effective attack strategy.</p><h5 id="sql3-this-query-compares-the-honest-and-attacker-loss-rates" tabindex="-1">SQL3: This query compares the honest and attacker loss rates <a class="header-anchor" href="#sql3-this-query-compares-the-honest-and-attacker-loss-rates" aria-label="Permalink to &quot;SQL3: This query compares the honest and attacker loss rates&quot;">​</a></h5><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> content, honest_lose_rate_avg, attacker_lose_rate_avg </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> t_strategy </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">WHERE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> honest_lose_rate_avg </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> attacker_lose_rate_avg;</span></span></code></pre></div><p>If the result is non-empty, it suggests that the honest reward loss rate is higher than the attacker&#39;s loss rate, and the \\texttt{content} field should be recorded as an effective attack strategy.</p><p>If <em>SQL1</em>, <em>SQL2</em>, and <em>SQL3</em> all return empty results, it means that none of the strategies in the current attack are effective. Otherwise, it indicates that the attack is successful with some effective strategies.</p><h2 id="stop-the-test" tabindex="-1">Stop the Test <a class="header-anchor" href="#stop-the-test" aria-label="Permalink to &quot;Stop the Test&quot;">​</a></h2><p>To stop the test, run the following command:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./stop.sh</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> testname</span></span></code></pre></div><p>Due to the limitations of Kurtosis, the test cannot be restarted once it has stopped.</p>`,31)]))}const g=a(n,[["render",p]]);export{k as __pageData,g as default};
